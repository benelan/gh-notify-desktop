#!/usr/bin/env bash

# Responsibly check for new GitHub notifications
# https://docs.github.com/en/rest/activity/notifications?apiVersion=2022-11-28

GH_ND_DATA_DIR="${GH_ND_DATA_DIR:-${XDG_STATE_HOME:-$HOME/.local/state}/gh-notify-desktop}"
mkdir -p "$GH_ND_DATA_DIR"

now="$(date +'%s')"
last_checked="$(cat "$GH_ND_DATA_DIR/last-checked" 2>/dev/null)"

if [ -n "$last_checked" ]; then
    time_since_last_check=$((now - last_checked))
    poll_interval="$(cat "$GH_ND_DATA_DIR/poll-interval" 2>/dev/null)"

    if [ -n "$poll_interval" ]; then
        remaining_poll_wait=$((poll_interval - time_since_last_check))

        if [ "$remaining_poll_wait" -gt 0 ]; then
            echo "Please wait $remaining_poll_wait seconds before checking for GitHub notifications again" >&2
            exit 3
        fi
    fi
fi

echo "$now" >"$GH_ND_DATA_DIR/last-checked"

headers="$(
    curl -I --silent --url https://api.github.com/notifications \
        --header "Authorization: Bearer $(gh auth token)" \
        --header "X-GitHub-Api-Version: 2022-11-28" \
        --header "If-Modified-Since: $(
            cat "$GH_ND_DATA_DIR/last-modified" 2>/dev/null
        )"
)"

status_code="$(head -n1 <<<"$headers" | cut -d ' ' -f2)"
last_modified="$(grep last-modified <<<"$headers" | awk -F ': ' '{print $2}')"
poll_interval="$(
    grep x-poll-interval <<<"$headers" | awk -F ': ' '{print $2}' | tr -dc '[:digit:]'
)"

[ -n "$last_modified" ] &&
    echo "$last_modified" >"$GH_ND_DATA_DIR/last-modified"

[ -n "$poll_interval" ] &&
    echo "$poll_interval" >"$GH_ND_DATA_DIR/poll-interval"

if [ "$status_code" = "200" ]; then
    echo "There are new GitHub notifications" >&2
elif [ "$status_code" = "304" ]; then
    echo "Up to date on GitHub notifications" >&2
    exit 2
else
    echo "Uh oh, GitHub responded with status code $status_code" >&2
    exit 1
fi

# don't create a desktop notification if the io streams are a tty
if [ -t 0 ] && [ -t 1 ]; then
    exit 0
fi

# Add dunstify action to open if the gh-notify extension is installed
# and if the TERMINAL environment variable is set to a supported emulator
# https://github.com/meiji163/gh-notify
if gh extension list | grep -q 'gh notify' 2>/dev/null &&
    [[ "$TERMINAL" =~ ^(x-terminal-emulator|xterm|wezterm|kitty|alacritty|gnome-terminal|konsole|foot|eterm|st)$ ]]; then
    cli_action="cli,open in gh-notify"
fi

if [ -n "$GH_BROWSER" ] || [ -n "$BROWSER" ]; then
    web_action="web,open in browser"
fi

action_response=$(
    dunstify "GitHub" "new notification(s)" -a "gh-notify-desktop" \
        ${GH_ND_ICON:+-i "$GH_ND_ICON"} \
        ${web_action:+-A "$web_action"} \
        ${cli_action:+-A "$cli_action"}
)

case $action_response in
    web) ${GH_BROWSER:-$BROWSER} https://github.com/notifications?query=is%3Aunread ;;
    cli) $TERMINAL -e sh -c "gh notify" ;;
esac
